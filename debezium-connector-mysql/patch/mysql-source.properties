# name: source端连接器名称，debezium的原生参数，无默认值，可自定义，不同连接器需保证名称的唯一性
name=cdc-connector
# connector.class: 连接器的启动类，debezium的原生参数，无默认值，示例中的值为mysql source connector对应的类名，不可修改
connector.class=io.debezium.connector.mysql.MySqlConnector
# database.hostname: mysql数据库主机ip，debezium的原生参数，无默认值，根据实际自定义修改
database.hostname=127.0.0.1
# database.port: mysql数据库端口，debezium的原生参数，默认值为3306，可根据实际自定义修改
database.port=3306
# database.user: mysql数据库用户，debezium的原生参数，无默认值，根据实际自定义修改
database.user=mysql_test
# database.password: mysql数据库用户密码，debezium的原生参数，无默认值，根据实际自定义修改
database.password=**********
# database.server.id: mysql数据库实例id，debezium的原生参数，取值为一个随机数，作为数据库的客户端id
# 连接器以该id加入MySQL集群，以便读取binlog，默认情况下，会生成5400到6400之间的一个随机数，建议显式设置该值
# 针对在当前MySQL集群指定的客户端id，该值必须唯一
database.server.id=1
# database.server.name: mysql数据库实例名称，debezium的原生参数，无默认值，可自定义
database.server.name=mysql_server
# database.history.kafka.bootstrap.servers: kafka服务器地址，debezium的原生参数，无默认值，根据实际自定义修改
database.history.kafka.bootstrap.servers=127.0.0.1:9092
# database.history.kafka.topic: kafka历史topic名称，debezium的原生参数，无默认值，可自定义
database.history.kafka.topic=mysql_server_history
# include.schema.changes: 指定连接器是否将变更发布到kafka主题中，debezium的原生参数，boolean类型，默认值为true，不可修改
include.schema.changes=true
# tasks.max: 连接器创建的最大任务数，debezium的原生参数，默认值为1，MySQL connector通常为单任务，不建议修改
tasks.max=1
# snapshot.mode：快照模式，debezium的原生参数，默认值为initial，此处需设置为schema_only，不可修改
snapshot.mode=schema_only
# provide.transaction.metadata: 指定连接器是否存储事务元数据信息，debezium的原生参数，boolean类型，默认为false，此处需设置为true，不可修改
provide.transaction.metadata=true
# transforms: kafka topic路由转发名称，debezium提供topic路由能力，不可修改
transforms=route
# transforms.route.type: kafka topic路由转发类型，debezium提供topic路由能力，不可修改
transforms.route.type=org.apache.kafka.connect.transforms.RegexRouter
# transforms.route.regex: kafka topic路由转发正则匹配表达式，正则匹配按照前缀匹配，debezium提供topic路由能力，不可修改
# 将ddl, dml及事务topic均路由转发至同一topic，其中正则表达式中的mysql_server与配置项database.server.name相对应
transforms.route.regex=^mysql_server(.*)
# transforms.route.replacement: kafka topic路由转发后的topic名称，debezium提供topic路由能力，可自定义
# 该参数与mysql-sink.properties的配置项topics相对应
transforms.route.replacement=mysql_server_topic
# snapshot.offset.binlog.filename: 新增参数，自定义配置快照点的binlog文件名
# 跟全量迁移chameleon配合时，取决于全量迁移后从sch_chameleon.t_replica_batch表中列t_binlog_name中查询的binlog文件名
snapshot.offset.binlog.filename=mysql-bin.000022
# snapshot.offset.binlog.position: 新增参数，自定义配置快照点的binlog位置
# 跟全量迁移chameleon配合时，取决于全量迁移后从sch_chameleon.t_replica_batch表中列i_binlog_position中查询的binlog位置
snapshot.offset.binlog.position=891808838
# snapshot.offset.gtid.set: 新增参数，自定义配置快照点的Executed_Gtid_Set
# 跟全量迁移chameleon配合时，取决于全量迁移后从sch_chameleon.t_replica_batch表中列executed_gtid_set中查询的gtid set
# 需注意最大事务号需减1
snapshot.offset.gtid.set=c6eca988-a77e-11ec-8eec-fa163e3d2519:1-50458531
# parallel.parse.event: 新增参数，boolean类型，是否启用并行解析event能力，默认为true，表示启用并行解析能力
# 若设置为false，则表示不启用并行解析能力，会降低在线迁移的性能
parallel.parse.event=true
# bigint.unsigned.handing.mode: 指定bigint unsigned数据类型的表示方式，debezium的原生参数，可选的值为long和precise。
# long对应Java的long类型，precise对应java.math.BigDecimal类型。
# 对于大于等于2^63的值，会超出Java的long类型的存储范围，应该使用BigDecimal存储，即设置该值为precise
bigint.unsigned.handling.mode=precise
# database.include.list: 指定mysql库的白名单，debezium的原生参数，String类型，默认值为空字符串，表示捕获所有数据库的变更
# 若设置该值，则表示只捕获指定数据库的变更，多个库之间用逗号分隔
database.include.list=mysql_database1,mysql_database2
# commit.process.while.running：布尔值，默认为false，通过该配置项选择是否上报迁移进度
commit.process.while.running=true
# source.process.file.path：迁移进度文件的输出路径，只有commit.process.while.running=true时才起作用，默认在迁移插件同一目录下
source.process.file.path=/***/***/***/
# commit.time.interval：迁移进度上报的时间间隔，取int型整数，默认为1，单位：s
commit.time.interval=1
# create.count.info.path：记录源端日志生产起始点的文件输出路径，需与sink端的此配置项相同，默认与迁移插件在同一目录下
create.count.info.path=/***/***/***/
# process.file.count.limit：进度目录下文件数目限制值，如果进度目录下的文件数目超过该值，工具启动时会按时间从早到晚删除多余的文件，默认值为10
process.file.count.limit=10
# process.file.time.limit：进度文件保存时长，超过该时长的文件会在工具下次启动时删除，默认值为168，单位：小时
process.file.time.limit=168
# append.write：进度文件写入方式，true表示追加写入，false表示覆盖写入，默认值为false
append.write=false
# file.size.limit：文件大小限制，超过该限制值工具会另启新文件写入，默认为10，单位：兆
file.size.limit=10
# snapshot.locking.mode: 控制连接器在获取快照时是否允许获取全局读锁，debezium原生参数，默认值为minimal，此处需设置none，不可修改。
# 在全量迁移阶段获取快照时设置读锁，增量迁移无需获取读锁，因此设置为none。
snapshot.locking.mode=none
# min.start.memory: 自定义debezium最小启动内存
min.start.memory=256M
# max.start.memory: 自定义debezium最大启动内存
max.start.memory=2G